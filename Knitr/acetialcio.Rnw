\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage{hyperref}
\hypersetup{
  linktocpage,
  colorlinks=true, 
  linkcolor=blue,
  citecolor=blue,
  filecolor=blue,
  urlcolor=blue
}

\begin{document}

\title{Acetilation}
\author{Lucas Michel Todó}
\maketitle
\tableofcontents
\clearpage

<<imports, echo=FALSE, warning=FALSE>>=
library(ggplot2)
library(dplyr)
library(pscl)
library(XLConnect)
@

<<creating_table, echo=FALSE, warning=FALSE>>=

# cov_met <- read.csv("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/10G_me_sort_q5_fullcoverage.bed", header = FALSE,  sep ="\t", quote = "", row.names = NULL, stringsAsFactors = FALSE)
# cov_ac <- read.csv("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/10G_ac_sort_q5_fullcoverage.bed", header = FALSE,  sep ="\t", quote = "", row.names = NULL, stringsAsFactors = FALSE)
# 
# ref <- read.csv("/home/lucas/ISGlobal/Gen_Referencies/Elongated_genes2.gff", header = FALSE,  sep ="\t", quote = "", row.names = NULL, stringsAsFactors = FALSE)
# 
# cov <- cbind(cov_met, cov_ac[,4])
# colnames(cov) <- c("Chom", "Start", "Stop", "Met", "Ac")
# cov <- cov[order(cov$Chom),]
# rownames(cov) <- NULL
# cov["Type"] <- "other"
# dim(ref)
# 
#  for (i in 1:dim(ref)[1]){
#    print(ref[i,])
#    chr <- ref[i,1]
#    print(chr)
#    pre_start <- ref[i,4]
#    pre_stop <- pre_start + ref[i,10]
#    post_start <- ref[i,5] - ref[i,11]
#    post_stop <- ref[i,5]
# 
#    # el problema es que retorna els idx dins dels subset (i després seleccionem els index al df sencer)
#    if (ref[i,7] == "+") {
#    cov[cov$Chom == chr,][which.min(abs(cov[cov$Chom == chr,2] - pre_start)): which.min(abs(cov[cov$Chom == chr,2] - pre_stop)),6] <- "5prima"
#      cov[cov$Chom == chr,][which.min(abs(cov[cov$Chom == chr,2] - pre_stop)): which.min(abs(cov[cov$Chom == chr,2] - post_start)),6] <- "ORF"
#      cov[cov$Chom == chr,][which.min(abs(cov[cov$Chom == chr,2] - post_start)): which.min(abs(cov[cov$Chom == chr,2] - post_stop)),6] <- "3prima"
# 
#    } else {
#      cov[cov$Chom == chr,][which.min(abs(cov[cov$Chom == chr,2] - pre_start)): which.min(abs(cov[cov$Chom == chr,2] - pre_stop)),6] <- "3prima"
#      cov[cov$Chom == chr,][which.min(abs(cov[cov$Chom == chr,2] - pre_stop)): which.min(abs(cov[cov$Chom == chr,2] - post_start)),6] <- "ORF"
#      cov[cov$Chom == chr,][which.min(abs(cov[cov$Chom == chr,2] - post_start)): which.min(abs(cov[cov$Chom == chr,2] - post_stop)),6] <- "5prima"
#      }
#  }
# 
# write.table(cov, file = "/home/lucas/ISGlobal/Gen_Referencies/Coverage_200bp.csv", quote = FALSE, row.names = FALSE, dec = ".", sep = "\t")

cov <- read.csv("/home/lucas/ISGlobal/Gen_Referencies/Coverage_200bp.csv", header = TRUE,  sep ="\t", quote = "", row.names = NULL, stringsAsFactors = FALSE)

cod_cov <- cov[cov$Type != "other",]

variant <- read.csv("/home/lucas/ISGlobal/Gen_Referencies/Gens_variants2.txt", header = FALSE,  sep ="\t", quote = "", row.names = NULL, stringsAsFactors = FALSE)

cov["Variant"] <- FALSE

for (i in 1:dim(variant)[1]){
  start <- variant[i,5]
  stop <- variant[i,6]
  chr <- variant[i,2]
  cov[cov$Chom == chr,][which.min(abs(cov[cov$Chom == chr,2] - start)): which.min(abs(cov[cov$Chom == chr,2] - stop)),7] <- TRUE
  }
@
\section{Density Plots}
\subsection{log(Ac) All}
<<dens_all, echo=FALSE, warning=FALSE, out.width="1\\linewidth", message=FALSE>>=
df <- cov
ggplot(df, aes(log(df$Ac), fill = df$Variant)) + geom_density(alpha = 0.2)
@
\clearpage
\subsection{log(Ac) 5'}
<<dens_5, echo=FALSE, warning=FALSE, out.width="1\\linewidth", message=FALSE>>=
df <- cov[cov$Type == "5prima",]
ggplot(df, aes(log(df$Ac), fill = df$Variant)) + geom_density(alpha = 0.2)
@
\clearpage
\subsection{log(Ac) 3'}
<<dens_3, echo=FALSE, warning=FALSE, out.width="1\\linewidth", message=FALSE>>=
df <- cov[cov$Type == "3prima",]
ggplot(df, aes(log(df$Ac), fill = df$Variant)) + geom_density(alpha = 0.2)
@
\clearpage
\subsection{log(Ac) ORF}
<<dens_ORF, echo=FALSE, warning=FALSE, out.width="1\\linewidth", message=FALSE>>=
df <- cov[cov$Type == "ORF",]
ggplot(df, aes(log(df$Ac), fill = df$Variant)) + geom_density(alpha = 0.2)
@
\clearpage
\subsection{log(Met) All}
<<dens_all_met, echo=FALSE, warning=FALSE, out.width="1\\linewidth", message=FALSE>>=
df <- cov
ggplot(df, aes(log(df$Met), fill = df$Variant)) + geom_density(alpha = 0.2)
@
\clearpage
\subsection{log(Met) 5'}
<<dens_5_met, echo=FALSE, warning=FALSE, out.width="1\\linewidth", message=FALSE>>=
df <- cov[cov$Type == "5prima",]
ggplot(df, aes(log(df$Met), fill = df$Variant)) + geom_density(alpha = 0.2)
@
\clearpage
\subsection{log(Met) ORF}
<<dens_ORF_met, echo=FALSE, warning=FALSE, out.width="1\\linewidth", message=FALSE>>=
df <- cov[cov$Type == "ORF",]
ggplot(df, aes(log(df$Met), fill = df$Variant)) + geom_density(alpha = 0.2)
@
\clearpage
\subsection{log(Ac) 3'}
<<dens_3_met, echo=FALSE, warning=FALSE, out.width="1\\linewidth", message=FALSE>>=
df <- cov[cov$Type == "3prima",]
ggplot(df, aes(log(df$Ac), fill = df$Variant)) + geom_density(alpha = 0.2)
@

<<>>=
trans_df <- readWorksheetFromFile("/home/lucas/ISGlobal/Chip_Seq/Transcripció_CSV/3D7_Variantome_AllData_withGam.xls", sheet = 1)
trans_df <- trans_df[,c(1,26)]

rosetta <- read.table("/home/lucas/ISGlobal/Gen_Referencies/Gene_references_rosetta.txt", fill = TRUE, fileEncoding = "UTF-8")
for (i in 1:length(trans_df[,1])){ # Traduïr noms.
  if (trans_df[i,1] %in% rosetta[,3]){
    trans_df[i,"ID"] <- rosetta[rosetta[,3] %in% trans_df[i,1],1][1]
  } else if (trans_df[i,1] %in% rosetta[,4]){
    trans_df[i,"ID"] <- rosetta[rosetta[,4] %in% trans_df[i,1],1][1]
  } else if (trans_df[i,1] %in% rosetta[,5]){
    trans_df[i,"ID"] <- rosetta[rosetta[,5] %in% trans_df[i,1],1][1]
  }
}

ggplot(trans_df, aes(log(trans_df$Aver.2Higher10G.))) + geom_histogram(bins = 200)

hist(log(trans_df$Aver.2Higher10G.), breaks = 200)
@


<<>>=
table(cov$Variant)
#df <- cov 
df <- rbind(sample_n(cov[cov$Variant == FALSE,], 6365), cov[cov$Variant == TRUE,])

train_idx <- rownames(sample_n(df, 8486))
train_df <- df[rownames(df) %in% train_idx,]
test_df <- df[!rownames(df) %in% train_idx,]

model <- glm(Variant ~ Ac+Met+Type+Start+Stop, family=binomial(link='logit'),data=train_df)
model2 <- glm(Variant ~ Ac+Met, family=binomial(link='logit'), data=train_df)

anova(model, model2, test = "Chisq")

summary(model)
fitted.results <- predict(model, test_df, type='response')
table(test_df$Variant, fitted.results > 0.5)
fitted.results <- ifelse(fitted.results > 0.5,1,0)
misClasificError <- mean(fitted.results != test_df$Variant)
print(paste('Accuracy',1-misClasificError))

test_df["Pred"] <- fitted.results
test_df["all_0"] <- 0
misClasificError2 <- mean(test_df$all_0 != test_df$Variant)
print(paste('Accuracy of null model',1-misClasificError2))

library(ROCR)
predict <- predict(model, type = 'response')
ROCRpred <- prediction(predict, train_df$Variant)
ROCRperf <- performance(ROCRpred, 'tpr','fpr')
plot(ROCRperf, colorize = TRUE, text.adj = c(-0.2,1.7))

false_pos_idx <- rownames(test_df[test_df$Pred == 1 & test_df$Variant == FALSE,])
false_pos <- cov[rownames(cov) %in% false_pos_idx,]
table(false_pos$Type)

false_neg_idx <- rownames(test_df[test_df$Pred == 0 & test_df$Variant == TRUE,])
false_neg <- cov[rownames(cov) %in% false_neg_idx,]
table(false_neg$Type)

pR2(model)

@



\end{document}