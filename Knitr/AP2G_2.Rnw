\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage{hyperref}
\hypersetup{
    linktocpage,
    colorlinks=true, 
    linkcolor=blue,
    citecolor=blue,
    filecolor=blue,
    urlcolor=blue
}

\begin{document}

\title{Transcription vs Metilation}
\author{Lucas Michel Todó}
\maketitle
\tableofcontents
\clearpage

<<import_packages>>=
library(ggplot2)
library(reshape2)
@

<<imports, echo=FALSE, warning=FALSE>>=

#### Import AP2G coverage vectors ####

files <- list.files("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/Coverage2/AP2G/")
files_met <- files[grepl("_me_cov_vect", files)]
files_in <- files[grepl("_in_cov_vect", files)]
files_ac <- files[grepl("_ac_cov_vect", files)]
  
pres <- c()
posts <- c()
ORFs <- c()

for (element in files_met){
  vect <- strsplit(readLines(paste0("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/Coverage2/AP2G/", element)), ",")
  vect <- lapply(vect, function(x) as.numeric(x))
  if (grepl("pre", element)){
    pres <- c(pres, vect)
  } else if (grepl("post", element)) {
    posts <- c(posts, vect)
  } else if (grepl("ORF", element)){
    ORFs <- c(ORFs, vect)
  }
}

names(pres) <- c("10G", "1.2B", "A7", "C2", "E5")
names(posts) <- c("10G", "1.2B", "A7", "C2", "E5")
names(ORFs) <- c("10G", "1.2B", "A7", "C2", "E5")

total_10G <- c(pres$`10G`, ORFs$`10G`, posts$`10G`)
total_1.2B <- c(pres$`1.2B`, ORFs$`1.2B`, posts$`1.2B`)
total_A7 <- c(pres$`A7`, ORFs$`A7`, posts$`A7`)
total_C2 <- c(pres$`C2`, ORFs$`C2`, posts$`C2`)
total_E5 <- c(pres$`E5`, ORFs$`E5`, posts$`E5`)

#### Import AP2G input-coverage vectors ####
pres_in <- c()
posts_in <- c()
ORFs_in <- c()

for (element in files_in){
  vect <- strsplit(readLines(paste0("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/Coverage2/AP2G/", element)), ",")
  vect <- lapply(vect, function(x) as.numeric(x))
  if (grepl("pre", element)){
    pres_in <- c(pres_in, vect)
  } else if (grepl("post", element)) {
    posts_in <- c(posts_in, vect)
  } else if (grepl("ORF", element)){
    ORFs_in <- c(ORFs_in, vect)
  }
}

names(pres_in) <- c("10G", "1.2B", "A7", "C2", "E5")
names(posts_in) <- c("10G", "1.2B", "A7", "C2", "E5")
names(ORFs_in) <- c("10G", "1.2B", "A7", "C2", "E5")

total_10G_in <- c(pres_in$`10G`, ORFs_in$`10G`, posts_in$`10G`)
total_1.2B_in <- c(pres_in$`1.2B`, ORFs_in$`1.2B`, posts_in$`1.2B`)
total_A7_in <- c(pres_in$`A7`, ORFs_in$`A7`, posts_in$`A7`)
total_C2_in <- c(pres_in$`C2`, ORFs_in$`C2`, posts_in$`C2`)
total_E5_in <- c(pres_in$`E5`, ORFs_in$`E5`, posts_in$`E5`)

#### Import AP2G acetilation-coverage vectors ####
pres_ac <- c()
posts_ac <- c()
ORFs_ac <- c()

for (element in files_ac){
  vect <- strsplit(readLines(paste0("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/Coverage2/AP2G/", element)), ",")
  vect <- lapply(vect, function(x) as.numeric(x))
  if (grepl("pre", element)){
    pres_ac <- c(pres_in, vect)
  } else if (grepl("post", element)) {
    posts_ac <- c(posts_in, vect)
  } else if (grepl("ORF", element)){
    ORFs_ac <- c(ORFs_in, vect)
  }
}

names(pres_ac) <- c("10G", "1.2B", "C2")
names(posts_ac) <- c("10G", "1.2B", "C2")
names(ORFs_ac) <- c("10G", "1.2B", "C2")

total_10G_ac <- c(pres_ac$`10G`, ORFs_ac$`10G`, posts_ac$`10G`)
total_1.2B_ac <- c(pres_ac$`1.2B`, ORFs_ac$`1.2B`, posts_ac$`1.2B`)
total_C2_ac <- c(pres_ac$`C2`, ORFs_ac$`C2`, posts_ac$`C2`)
@

\section{Taules Resum}
\subsection{Regió 5'}
<<summary_pre, echo=FALSE, warning=FALSE>>=
i <- 1
for (element in pres){
  print(names(pres)[i])
  print(summary(element))
  i = i+1
}
@
\subsection{ORF}
<<summary_orf, echo=FALSE, warning=FALSE>>=
i <- 1
for (element in ORFs){
  print(summary(element))
}
@
\subsection{Regió 3'}
<<summary_post, echo=FALSE, warning=FALSE>>=
i <- 1
for (element in posts){
  print(summary(element))
}
@
\clearpage

<<norm_by_input, echo=FALSE, warning=FALSE>>=
norm_10G <- total_10G / total_10G_in
norm_1.2B <- total_1.2B / total_1.2B_in
norm_A7 <- total_A7 / total_A7_in
norm_E5 <- total_E5 / total_E5_in
norm_C2 <- total_C2 / total_C2_in

df_in <- as.data.frame(norm_10G)
df_in["1.2B"] <- as.data.frame(norm_1.2B)
df_in["A7"] <- as.data.frame(norm_A7)
df_in["E5"] <- as.data.frame(norm_E5)
df_in["C2"] <- as.data.frame(norm_C2)
colnames(df_in)[1] <- "10G"
df_in["pos"] <- 903001:916000
df_in_m <- melt(df_in, id ="pos")
@
\section{Gràfics}
\subsection{Coverage}
<<plot_coverage, echo=FALSE, warning=FALSE, out.width="1\\linewidth">>=
df <- as.data.frame(total_10G)
df["1.2B"] <- as.data.frame(total_1.2B)
df["A7"] <- as.data.frame(total_A7)
df["E5"] <- as.data.frame(total_E5)
df["C2"] <- as.data.frame(total_C2)
colnames(df)[1] <- "10G"
df["pos"] <- 903001:916000
df_m <- melt(df, id ="pos")
 
p <- ggplot(df_m, aes(x = pos, y = df_m$value, colour = df_m$variable))
p + geom_line() +
    labs(title = "AP2G Coverage", x = "Position", y = "Coverage (Methylation)", colour = "Strain") +
    theme(plot.title = element_text(hjust = 0.5)) +
    geom_vline(xintercept =907203, linetype="dotted") +
    geom_vline(xintercept =914501, linetype="dotted")
@
\clearpage
\subsection{Coverage Normalitzat}
<<plot_norm_cov, echo=FALSE, warning=FALSE, out.width="1\\linewidth">>=
p <- ggplot(df_in_m, aes(x = pos, y = df_in_m$value, colour = df_in_m$variable))
p + geom_line() +
    labs(title = "AP2G Coverage dividit per input", x = "Position", y = "Coverage (Methylation)", colour = "Strain") +
    theme(plot.title = element_text(hjust = 0.5)) +
    geom_vline(xintercept =907203, linetype="dotted") +
    geom_vline(xintercept =914501, linetype="dotted")
@

<<plot_equalizedCoc, echo=FALSE, warning=FALSE, out.width="1\\linewidth">>=
df_fact <- as.data.frame(df_in$`1.2B`)
x <- df_in$`1.2B` / df_in$`10G`
x[is.infinite(x)] <- NA
fact <- median(x, na.rm = TRUE)
df_fact["10G"] <- df_in$`10G`*fact

x <- df_in$`1.2B` / df_in$`A7`
x[is.infinite(x)] <- NA
fact <- median(x, na.rm = TRUE)
df_fact["A7"] <- df_in$`A7`*fact

x <- df_in$`1.2B` / df_in$`E5`
x[is.infinite(x)] <- NA
fact <- median(x, na.rm = TRUE)
df_fact["E5"] <- df_in$`E5`*fact

x <- df_in$`1.2B` / df_in$`C2`
x[is.infinite(x)] <- NA
fact <- median(x, na.rm = TRUE)
df_fact["C2"] <- df_in$`C2`*fact
colnames(df_fact)[1] <- "1.2B"
df_fact["pos"] <- 903001:916000
df_fact_m <- melt(df_fact, id ="pos")
 
p <- ggplot(df_fact_m, aes(x = pos, y = df_fact_m$value, colour = df_fact_m$variable))
p + geom_line() +
    labs(title = "AP2G Coverage Equalized (1.2B-median)", x = "Position", y = "Coverage (Methylation)", colour = "Strain") +
    theme(plot.title = element_text(hjust = 0.5)) +
    geom_vline(xintercept =907203, linetype="dotted") +
    geom_vline(xintercept =914501, linetype="dotted")
@

<<>>=
f <- as.data.frame(df_in$`10G` / df_in[1:5])
f <- do.call(data.frame,lapply(f, function(x) replace(x, is.infinite(x),NA)))
fact <- apply(f, 2, function(x) mean(x, na.rm = TRUE))
for (i in 1:5){
  f[,i] <- df_in[,i]*fact[i]
}
f["pos"] <- df_in$pos

##smoothing
# for (i in 1:5){
#   f[,i] <- smooth(f[,i])
# }
f$X10G <- smooth(smooth(smooth(smooth(f$X10G))))
f$X1.2B <- smooth(smooth(smooth(smooth(f$X1.2B))))
f$A7 <- smooth(smooth(smooth(smooth(f$A7))))
f$E5 <- smooth(smooth(smooth(smooth(f$E5))))
f$C2 <- smooth(smooth(smooth(smooth(f$C2))))

f_m <- melt(f, id ="pos")

p <- ggplot(f_m, aes(x = pos, y = f_m$value, colour = f_m$variable))
p + geom_line() + 
    labs(title = "AP2G Coverage Equalized 10G(mean)", x = "Position", y = "Coverage (Methylation)", colour = "Strain") +
    theme(plot.title = element_text(hjust = 0.5)) +
    geom_vline(xintercept =907203, linetype="dotted") +
    geom_vline(xintercept =914501, linetype="dotted")
@

\clearpage
\subsection{Coverage Normalitzat a regió 5'}
<<plot_norm_cov_5, echo=FALSE, warning=FALSE, out.width="1\\linewidth">>=
m_5 <- melt(df_in[1:4203,], id ="pos")
p <- ggplot(m_5, aes(x = pos, y = m_5$value, colour = m_5$variable))
p + geom_line() +
    labs(title = "AP2G Coverage restant input 5'", x = "Position", y = "Coverage (Methylation)", colour = "Strain") +
    theme(plot.title = element_text(hjust = 0.5))
@
\clearpage
\subsection{Coverage Acetilació}
<<plot_ac, echo=FALSE, warning=FALSE, out.width="1\\linewidth">>=
df_ac <- as.data.frame(total_10G_ac)
df_ac["1.2B"] <- as.data.frame(total_1.2B_ac)
df_ac["C2"] <- as.data.frame(total_C2_ac)
colnames(df_ac)[1] <- "10G"
df_ac["pos"] <- 903001:916000
df_ac_m <- melt(df_ac, id ="pos")

p <- ggplot(df_ac_m, aes(x = pos, y = df_ac_m$value, colour = df_ac_m$variable))
p + geom_line() +
    labs(title = "AP2G Coverage Acetilació", x = "Position", y = "Coverage (Methylation)", colour = "Strain") +
    theme(plot.title = element_text(hjust = 0.5)) +
    geom_vline(xintercept =907203, linetype="dotted") +
    geom_vline(xintercept =914501, linetype="dotted")
@
\clearpage
\subsection{Coverage Acetilació a 5'}
<<plot_ac_5, echo=FALSE, warning=FALSE, out.width="1\\linewidth">>=
df_ac5_m <- melt(df_ac[1:4203,], id ="pos")

p <- ggplot(df_ac5_m, aes(x = pos, y = df_ac5_m$value, colour = df_ac5_m$variable))
p + geom_line() +
    labs(title = "AP2G Coverage Acetilació", x = "Position", y = "Coverage (Methylation)", colour = "Strain") +
    theme(plot.title = element_text(hjust = 0.5)) 
@
\clearpage

<<>>=
df_ac_met <- df_ac[,-4] / df[,c(1,2,5)]
df_ac_met["pos"] <- df$pos
df_ac_met_m <- melt(df_ac_met, id = "pos")

p <- ggplot(df_ac_met_m, aes(x = pos, y = df_ac_met_m$value, colour = df_ac_met_m$variable))
p + geom_line() +
    labs(title = "AP2G Coverage Acetilació", x = "Position", y = "Coverage (Methylation)", colour = "Strain") +
    theme(plot.title = element_text(hjust = 0.5))
@
\end{document}