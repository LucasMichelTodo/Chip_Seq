\documentclass{article}
\usepackage[utf8]{inputenc}
\usepackage{hyperref}
\hypersetup{
    linktocpage,
    colorlinks=true, 
    linkcolor=blue,
    citecolor=blue,
    filecolor=blue,
    urlcolor=blue
}


\begin{document}
<<setup, include=FALSE, cache=FALSE>>=
library(knitr)
library(XLConnect)
library(ggplot2)
library(gplots)
library(plyr)
library(reshape2)

# set global chunk options
opts_chunk$set(fig.path='figure/minimal-', fig.align='center', fig.show='hold')
options(formatR.arrow=TRUE,width=90)
@

\title{Transcription vs Metilation}
\author{Lucas Michel Todó}
\maketitle
\tableofcontents
\clearpage

%------------------------------------------------------------------------------------------------------------------------------------------
%---------------------------------------------------------INTRO----------------------------------------------------------------------------

<<imports, echo=FALSE, warning=FALSE>>=

### Importar taula per traduïr noms ###
rosetta <- read.table("/home/lucas/ISGlobal/Gen_Referencies/Gene_references_rosetta.txt", fill = TRUE, fileEncoding = "UTF-8")

### Importar dades de transcripció ###
Trans <- xls <- readWorksheetFromFile("/home/lucas/ISGlobal/Chip_Seq/Transcripció_CSV/Dif_10G_12B_HSphenotype.xls", sheet = 4)
Trans <- Trans[!is.na(Trans$X1.2B) & !is.na(Trans$X10G), c(1,5,6)] #Seleccionar columnes i trure NAs.

for (i in 1:length(Trans[,1])){ # Traduïr noms.
  if (Trans[i,1] %in% rosetta[,3]){
    Trans[i,"ID"] <- rosetta[rosetta[,3] %in% Trans[i,1],1][1]
  } else if (Trans[i,1] %in% rosetta[,4]){
    Trans[i,"ID"] <- rosetta[rosetta[,4] %in% Trans[i,1],1][1]
  } else if (Trans[i,1] %in% rosetta[,5]){
    Trans[i,"ID"] <- rosetta[rosetta[,5] %in% Trans[i,1],1][1]
  }
}

Trans <-Trans[!is.na(Trans$ID),] # Treure files sense nom.
Trans["Dif_1.2-10"] <- Trans$X1.2B - Trans$X10G # Calcular diferències.

### Importar dades de metilació ###
df_10G <- read.table("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/Narrow_fe15/XLS_contrasts/Overlapped_and_filetred/calcFE/bed/annotated/10G_1.2B_peaks_overlappandfilter_calcFE_annotated.csv", header = TRUE, sep ="\t") 
df_1.2B <- read.table("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/Narrow_fe15/XLS_contrasts/Overlapped_and_filetred/calcFE/bed/annotated/1.2B_10G_peaks_overlappandfilter_calcFE_annotated.csv", header = TRUE, sep ="\t")

### Colapsar files (ajuntar diferents pics en un mateix gen) ###
df_10G_colapsed <- ddply(df_10G, "Gene", numcolwise(sum, c(2:4))) 
df_10G_colapsed["Total.cov"] <- apply(df_10G_colapsed[,2:4], 1, function(x) sum(x))
df_10G_colapsed["Chrom"] <- apply(df_10G_colapsed, 1, function(x) df_10G[df_10G$Gene == x[1], "Chrom"][1])
df_10G_colapsed["Annotations"] <- apply(df_10G_colapsed, 1, function(x) df_10G[df_10G$Gene == x[1], "Annotations"][1])

df_1.2B_colapsed <- ddply(df_1.2B, "Gene", numcolwise(sum, c(2:4))) 
df_1.2B_colapsed["Total.cov"] <- apply(df_1.2B_colapsed[,2:4], 1, function(x) sum(x))
df_1.2B_colapsed["Chrom"] <- apply(df_1.2B_colapsed, 1, function(x) df_1.2B[df_1.2B$Gene == x[1], "Chrom"][1])
df_1.2B_colapsed["Annotations"] <- apply(df_1.2B_colapsed, 1, function(x) df_1.2B[df_1.2B$Gene == x[1], "Annotations"][1])
@
\section{Generalitats}
En TOTS els gràfics la columna de més a l'esquerra correspon als valors de diferència de transcripció (1.2B - 10G). Les columnes següents corresponen a algun paràmetre relacionat amb la metilació (percentatge del gen metilat, coverage mitjà...). En alguns casos hi ha valor de metilació per a 1.2B i per a 10G i en altres una sola columna que correspon a la diferència de metilació. Per a cada tipus de gràfic se n'han fet diversos tenint en compte la metilació a tres zones diferents: TSS, gene-body i TTS. Per a cada tipus de gràfic he posat el més representatiu a tall d'exemple. Al final del document hi ha tota la resta de gràfics.
\clearpage

%------------------------------------------------------------------------------------------------------------------------------------------
%---------------------------------------------------------PERCENATGE-----------------------------------------------------------------------

\section{Heatmaps Percentatge de Coverage}
En aquest gràfics els valors corresponents a les columnes 1.2B i 10G corresponen al percentatge del gen cobert en pics diferencials. Per a obtenir aquests valors s'han unificat les dues llistes de pics differencials annotats. Tant per a 1.2B com a 10G els gens que corresponen a "pics de l'altra llista" tenen valors de 0.
\subsection{TSS+Gene+TTS}
<<heatmap_all, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
g10_g <- df_10G_colapsed$X3.cov + df_10G_colapsed$Gene.cov + df_10G_colapsed$X5.cov
b12_g <- df_1.2B_colapsed$X3.cov[df_1.2B_colapsed$Gene != "PF3D7_1301600"] + df_1.2B_colapsed$Gene.cov[df_1.2B_colapsed$Gene != "PF3D7_1301600"] + df_1.2B_colapsed$X5.cov[df_1.2B_colapsed$Gene != "PF3D7_1301600"]

heatmap_df <- data.frame(c(g10_g, (b12_g*(0))), c((g10_g*(0)), b12_g))
colnames(heatmap_df) <- c("10G", "1.2B")
rownames(heatmap_df) <- c(as.character(df_10G_colapsed$Gene), as.character(df_1.2B_colapsed$Gene[df_1.2B_colapsed$Gene != "PF3D7_1301600"]))
heatmap_df["PF3D7_1301600","1.2B"] <- df_1.2B_colapsed$X3.cov[df_1.2B_colapsed$Gene == "PF3D7_1301600"]
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans[Trans$ID == x[3],]$`Dif_1.2-10`[1])
heatmap_df["Met"] <- heatmap_df$`1.2B` - heatmap_df$`10G`
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id

#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(4,5)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          na.color = "grey",
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          main="TSS+Gene-body+TTS: Ordered by transcription")
@
\clearpage
<<heatmap_all_metord, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
heatmap_df <- arrange(heatmap_df, Met)
rownames(heatmap_df) <- heatmap_df$id

my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(4,5)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="TSS+Gene-body+TTS: Ordered by methylation")
@

%------------------------------------------------------------------------------------------------------------------------------------------
%---------------------------------------------------------COVERAGE-------------------------------------------------------------------------
\clearpage
\section{Heatmaps Coverage}
En aquests gràfics el valors de les columnes 1.2B i 10G corresponen al valor de coverage de cada gen. El coverage s'ha calculat per a tots els gens i s'ha "normalitzat" tant per nombre de reads (per a compensar el fet que els alineaments amb més reads tenen més coverage en general) com pel tamany del gen (per compensar el fet que els gens més llargs tenen més reads). Els gens que es mostren al gràfic estàn filtrats: només apareixen aquells que tenen una diferència de transcripció (primera columna) major a 0.7 (en valor absolut).
<<Import-cov, echo=FALSE, warning=FALSE>>=
cov_10G <- read.table("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/10G_met_cov.csv", header = TRUE, sep ="\t")
cov_1.2B <- read.table("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/1.2B_met_cov.csv", header = TRUE, sep ="\t")
@
\subsection{Coverage Gene Body + 5'}
<<heat_cov_tss_gene, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
#plot(Trans$`Dif_1.2-10`)
Trans2 <- arrange(Trans, -abs(Trans$`Dif_1.2-10`))[1:30,]
  
g10_g <- as.numeric(cov_10G$Gene.cov) + as.numeric(cov_10G$X5.cov)
b12_g <- as.numeric(cov_1.2B$Gene.cov) + as.numeric(cov_1.2B$X5.cov)
heatmap_df <- data.frame(g10_g, b12_g)
colnames(heatmap_df) <- c("10G", "1.2B")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[3],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id

heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]
#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(4,2,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Coverage Gene Body + 5'")
@
\clearpage

%------------------------------------------------------------------------------------------------------------------------------------------
%---------------------------------------------------------DIFERÈNCIA DE COVERAGE-----------------------------------------------------------

\subsection{Diferència de Coverage, filtrat per diferència de transcripció}
En aquests gràfics hi ha una sola columna corresponent a metilació que correspon a diferència de coverage. Aquesta diferència és simplement la resta (1.2B - 10G) dels valors obtinguts en l'apartat anterior.
<<<heat_cov_diff, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
Trans2 <- arrange(Trans, -abs(Trans$`Dif_1.2-10`))[1:30,]
diff <- (as.numeric(cov_1.2B$Gene.cov)+as.numeric(cov_1.2B$X5.cov)+as.numeric(cov_1.2B$X3.cov)) - (as.numeric(cov_10G$Gene.cov)+as.numeric(cov_10G$X5.cov)+as.numeric(cov_10G$X3.cov)) 
heatmap_df <- data.frame(diff)
colnames(heatmap_df) <- ("Met_diff")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id
heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]

my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Diferència de Coverage ordenat per transcripció")
@
\clearpage
<<<heat_cov_diff_metord, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
Trans2 <- arrange(Trans, -abs(Trans$`Dif_1.2-10`))[1:30,]
diff <- (as.numeric(cov_1.2B$Gene.cov)+as.numeric(cov_1.2B$X5.cov)+as.numeric(cov_1.2B$X3.cov)) - (as.numeric(cov_10G$Gene.cov)+as.numeric(cov_10G$X5.cov)+as.numeric(cov_10G$X3.cov)) 
heatmap_df <- data.frame(diff)
colnames(heatmap_df) <- ("Met_diff")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, Met_diff)
rownames(heatmap_df) <- heatmap_df$id
heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]

my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Diferència de Coverage ordenat per Metilació")
@
\clearpage
\subsection{Diferència de Coverage, filtrat per diferència de metilació}
Aquest gràfic és el mateix que l'anterior però en comptes de filtrar per valors de transcripció els gens que hi apareixen estàn filtrats per valors de metilació. Els gens que apreixen al gràfic són aquells què apareixen a alguna de les llistes de gens pics diferencials.
<<heat_cov_diff_filter, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
Trans2 <- Trans
diff <- (as.numeric(cov_1.2B$Gene.cov)+as.numeric(cov_1.2B$X5.cov)+as.numeric(cov_1.2B$X3.cov)) - (as.numeric(cov_10G$Gene.cov)+as.numeric(cov_10G$X5.cov)+as.numeric(cov_10G$X3.cov)) 
heatmap_df <- data.frame(diff)
colnames(heatmap_df) <- ("Met_diff")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id

heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]
heatmap_df <- heatmap_df[heatmap_df$id %in% df_10G_colapsed$Gene | heatmap_df$id %in% df_1.2B_colapsed$Gene,]
#heatmap_df <- heatmap_df[abs(heatmap_df$Met_diff) >= 20,]

my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Diferència de Coverage, ordenat per transcripció")
@
\clearpage
En aquest cas hem deixat els gens per als que no tenim valors de transcripció.
<<heat_cov_diff_filter_metord, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
Trans2 <- Trans
diff <- (as.numeric(cov_1.2B$Gene.cov)+as.numeric(cov_1.2B$X5.cov)+as.numeric(cov_1.2B$X3.cov)) - (as.numeric(cov_10G$Gene.cov)+as.numeric(cov_10G$X5.cov)+as.numeric(cov_10G$X3.cov)) 
heatmap_df <- data.frame(diff)
colnames(heatmap_df) <- ("Met_diff")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, Met_diff)
rownames(heatmap_df) <- heatmap_df$id

#heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]
heatmap_df <- heatmap_df[heatmap_df$id %in% df_10G_colapsed$Gene | heatmap_df$id %in% df_1.2B_colapsed$Gene,]
#heatmap_df <- heatmap_df[abs(heatmap_df$Met_diff) >= 20,]

my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Diferència de Coverage, odenada per metilació")
@
\clearpage
\subsection{Diferència de Coverage: auto-clustering}
En aquest cas hem deixat que els gens s'ordeni "sol" fent servir l'algoritme de clustering de la funció "heatmap2" d'R.
<<heat_cov_diff_filter_cluster, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
Trans2 <- arrange(Trans, -abs(Trans$`Dif_1.2-10`))[1:30,]
diff <- (as.numeric(cov_1.2B$Gene.cov)+as.numeric(cov_1.2B$X5.cov)+as.numeric(cov_1.2B$X3.cov)) - (as.numeric(cov_10G$Gene.cov)+as.numeric(cov_10G$X5.cov)+as.numeric(cov_10G$X3.cov)) 
heatmap_df <- data.frame(diff)
colnames(heatmap_df) <- ("Met_diff")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id
heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]

my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          #Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          #dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Diferència de Coverage filtrat per transcripció, clustering")
@
\clearpage
<<heat_cov_met_filter_cluster, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
Trans2 <- Trans
diff <- (as.numeric(cov_1.2B$Gene.cov)+as.numeric(cov_1.2B$X5.cov)+as.numeric(cov_1.2B$X3.cov)) - (as.numeric(cov_10G$Gene.cov)+as.numeric(cov_10G$X5.cov)+as.numeric(cov_10G$X3.cov)) 
heatmap_df <- data.frame(diff)
colnames(heatmap_df) <- ("Met_diff")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id

heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]
heatmap_df <- heatmap_df[heatmap_df$id %in% df_10G_colapsed$Gene | heatmap_df$id %in% df_1.2B_colapsed$Gene,]
#heatmap_df <- heatmap_df[abs(heatmap_df$Met_diff) >= 20,]

my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          #Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          #dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Diferència de Coverage filtrat per metilació, clustering")
@
%------------------------------------------------------------------------------------------------------------------------------------------
%---------------------------------------------------------COVERAGE A PICS DIFERENCIALS-----------------------------------------------------

\clearpage
\section{Coverage a pics diferencials}
En aquests gràfics s'ha calculat el coverage mitjà de la mateixa manera que en els anteriors, però l'anàlisi s'ha restringit a aquells gens que apareixen a qualsevol de les dues llistes de pics diferencials (pics diferencials a 1.2B i a 10G). 
<<import_dif_cov, warning=FALSE, echo=FALSE>>=
dif_10G_cov <- read.table("/home/lucas/ISGlobal/Diff_Peaks_12B_10G_annotated_cov10G.csv", header = TRUE, sep ="\t")
dif_1.2B_cov <- read.table("/home/lucas/ISGlobal/Diff_Peaks_12B_10G_annotated_cov1.2B.csv", header = TRUE, sep ="\t")

dif_10G_cov_colapsed <- aggregate(.~ Gene, data=dif_10G_cov, FUN=sum)
dif_10G_cov_colapsed["Total.cov"] <- apply(dif_10G_cov_colapsed[,2:4], 1, function(x) sum(x))
dif_10G_cov_colapsed["Chrom"] <- apply(dif_10G_cov_colapsed, 1, function(x) dif_10G_cov[dif_10G_cov$Gene == x[1], "Chrom"][1])
dif_10G_cov_colapsed["Annotations"] <- apply(dif_10G_cov_colapsed, 1, function(x) dif_10G_cov[dif_10G_cov$Gene == x[1], "Annotations"][1])

dif_1.2B_cov_colapsed <- aggregate(.~ Gene, data=dif_1.2B_cov, FUN=sum)
dif_1.2B_cov_colapsed["Total.cov"] <- apply(dif_1.2B_cov_colapsed[,2:4], 1, function(x) sum(x))
dif_1.2B_cov_colapsed["Chrom"] <- apply(dif_1.2B_cov_colapsed, 1, function(x) dif_1.2B_cov[dif_1.2B_cov$Gene == x[1], "Chrom"][1])
dif_1.2B_cov_colapsed["Annotations"] <- apply(dif_1.2B_cov_colapsed, 1, function(x) dif_1.2B_cov[dif_1.2B_cov$Gene == x[1], "Annotations"][1])
@
\subsection{Coverage a pics diferencials}
En aquests gràfics els valors de les columnes 1.2B i 10G corresponen al coverage mitjà de cada gen només a les zones on hi ha pics diferencials (de metilació).
<<heat_difpeak_cov, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
g10_g <- dif_10G_cov_colapsed$Gene.cov
b12_g <- dif_1.2B_cov_colapsed$Gene.cov

heatmap_df <- data.frame(g10_g, b12_g)
colnames(heatmap_df) <- c("10G", "1.2B")
rownames(heatmap_df) <- c(as.character(dif_10G_cov_colapsed$Gene))
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans[Trans$ID == x[3],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id
heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]

#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(4,2,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Coverage a pics: Gene-Body, ordenat per transcripció")
@
\clearpage
\subsection{Diferència de coverage a pics diferencials}
En aquests gràfics tenim una sola columna a la dreta que correspon a la diferència de coverage entre 1.2B i 10G només a les zones on hi ha pics.
<<heat_difpeak_cov_dif, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
g10_g <- dif_10G_cov_colapsed$Gene.cov
b12_g <- dif_1.2B_cov_colapsed$Gene.cov
Diff <- b12_g - g10_g
heatmap_df <- data.frame(Diff)
colnames(heatmap_df) <- "Diff"
rownames(heatmap_df) <- c(as.character(dif_10G_cov_colapsed$Gene))
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans[Trans$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id
#heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]

#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Diferència de coverage a pics: Gene-Body, ordenat per transcripció")
@
\clearpage
<<heat_difpeak_cov_dif_metord, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
g10_g <- dif_10G_cov_colapsed$Gene.cov
b12_g <- dif_1.2B_cov_colapsed$Gene.cov
Diff <- b12_g - g10_g
heatmap_df <- data.frame(Diff)
colnames(heatmap_df) <- "Diff"
rownames(heatmap_df) <- c(as.character(dif_10G_cov_colapsed$Gene))
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans[Trans$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, Diff)
rownames(heatmap_df) <- heatmap_df$id
#heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]

#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Diferència de coverage a pics: Gene-Body, ordenat per metilació")
@
% -----------------------------------------------------------------------------------------------------------------------------------------
% ---------------------------------------------------------  RESTA DE GRÀFICS -------------------------------------------------------------
\clearpage
\section{Resta de gràfics}
\section{Percentatge de metilació}
\subsection{Gene-body}
<<heatmap_gene, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
g10_g <- df_10G_colapsed$Gene.cov
b12_g <- df_1.2B_colapsed$Gene.cov[df_1.2B_colapsed$Gene != "PF3D7_1301600"]
heatmap_df <- data.frame(c(g10_g, (b12_g*(0))), c((g10_g*(0)), b12_g))
colnames(heatmap_df) <- c("10G", "1.2B")
rownames(heatmap_df) <- c(as.character(df_10G_colapsed$Gene), as.character(df_1.2B_colapsed$Gene[df_1.2B_colapsed$Gene != "PF3D7_1301600"]))
heatmap_df["PF3D7_1301600","1.2B"] <- df_1.2B_colapsed$Gene.cov[df_1.2B_colapsed$Gene == "PF3D7_1301600"]
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans[Trans$ID == x[3],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id

#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(4,2,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,1),
          na.color = "grey",
          main="Gene-Body")
@
\clearpage
\subsection{TSS}
En aquest gràfic en comptes d'ordenar els gens en funció de la primera columna s'han ordenat "sols" seguint l'algoritme de clustering de la funció "heatmap" de R.
<<heatmap_tss, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
g10_g <- df_10G_colapsed$X5.cov
b12_g <- df_1.2B_colapsed$X5.cov[df_1.2B_colapsed$Gene != "PF3D7_1301600"]
heatmap_df <- data.frame(c(g10_g, (b12_g*(0))), c((g10_g*(0)), b12_g))
colnames(heatmap_df) <- c("10G", "1.2B")
rownames(heatmap_df) <- c(as.character(df_10G_colapsed$Gene), as.character(df_1.2B_colapsed$Gene[df_1.2B_colapsed$Gene != "PF3D7_1301600"]))
heatmap_df["PF3D7_1301600","1.2B"] <- df_1.2B_colapsed$X5.cov[df_1.2B_colapsed$Gene == "PF3D7_1301600"]
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans[Trans$ID == x[3],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id

#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(4,2,1)]), 
          scale="column", 
          #Rowv = NA, 
          #Colv = NA, 
          col = my_palette, 
          #dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,1),
          na.color = "grey",
          main="TSS")
@
\clearpage
\subsection{Gene + TSS}
<<heatmap_gene_tss, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
g10_g <- df_10G_colapsed$X5.cov + df_10G_colapsed$Gene.cov
b12_g <- df_1.2B_colapsed$X5.cov[df_1.2B_colapsed$Gene != "PF3D7_1301600"] + df_1.2B_colapsed$Gene.cov[df_1.2B_colapsed$Gene != "PF3D7_1301600"]
heatmap_df <- data.frame(c(g10_g, (b12_g*(0))), c((g10_g*(0)), b12_g))
colnames(heatmap_df) <- c("10G", "1.2B")
rownames(heatmap_df) <- c(as.character(df_10G_colapsed$Gene), as.character(df_1.2B_colapsed$Gene[df_1.2B_colapsed$Gene != "PF3D7_1301600"]))
heatmap_df["PF3D7_1301600","1.2B"] <- df_1.2B_colapsed$Gene.cov[df_1.2B_colapsed$Gene == "PF3D7_1301600"] + df_1.2B_colapsed$X5.cov[df_1.2B_colapsed$Gene == "PF3D7_1301600"]
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans[Trans$ID == x[3],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id

#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(4,2,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,1),
          na.color = "grey",
          main="Gene-Body + TSS")
@
\clearpage
\subsection{TTS}
<<heatmap_tts, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
g10_g <- df_10G_colapsed$X3.cov
b12_g <- df_1.2B_colapsed$X3.cov[df_1.2B_colapsed$Gene != "PF3D7_1301600"]
heatmap_df <- data.frame(c(g10_g, (b12_g*(0))), c((g10_g*(0)), b12_g))
colnames(heatmap_df) <- c("10G", "1.2B")
rownames(heatmap_df) <- c(as.character(df_10G_colapsed$Gene), as.character(df_1.2B_colapsed$Gene[df_1.2B_colapsed$Gene != "PF3D7_1301600"]))
heatmap_df["PF3D7_1301600","1.2B"] <- df_1.2B_colapsed$X3.cov[df_1.2B_colapsed$Gene == "PF3D7_1301600"]
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans[Trans$ID == x[3],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id

#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(4,2,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,1),
          na.color = "grey",
          main="TSS")
@

\clearpage
\section{Coverage}
\subsection{Coverage Gene Body}
<<heat_cov_gene, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
#plot(Trans$`Dif_1.2-10`)
Trans2 <- Trans[abs(Trans$`Dif_1.2-10`) >= 0.7,]
  
g10_g <- as.numeric(cov_10G$Gene.cov)
b12_g <- as.numeric(cov_1.2B$Gene.cov)
heatmap_df <- data.frame(g10_g, b12_g)
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[3],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id

heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]
#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(4,2,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,1),
          na.color = "grey",
          main="Gene Coverage")
@
\clearpage
\subsection{Coverage 5'}
<<heat_cov_tss, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
#plot(Trans$`Dif_1.2-10`)
Trans2 <- Trans[abs(Trans$`Dif_1.2-10`) >= 0.7,]
  
g10_g <- as.numeric(cov_10G$X5.cov)
b12_g <- as.numeric(cov_1.2B$X5.cov)
heatmap_df <- data.frame(g10_g, b12_g)
colnames(heatmap_df) <- c("10G", "1.2B")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[3],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id

heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]
#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(4,2,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,1),
          na.color = "grey",
          main="Coverage 5'")
@
\clearpage
\clearpage
\subsection{Coverage 3'}
<<heat_cov_tts, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
#plot(Trans$`Dif_1.2-10`)
Trans2 <- Trans[abs(Trans$`Dif_1.2-10`) >= 0.7,]
  
g10_g <- as.numeric(cov_10G$X3.cov)
b12_g <- as.numeric(cov_1.2B$X3.cov)
heatmap_df <- data.frame(g10_g, b12_g)
colnames(heatmap_df) <- c("10G", "1.2B")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[3],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id

heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]
#native plot
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(4,2,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,1),
          na.color = "grey",
          main="Coverage 3'")
@
\clearpage

\section{Diferència de coverage}
\subsection{Diferència de Coverage a 5', filtrat per diferència de transcripció}
<<<heat_cov_diff_5, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
Trans2 <- Trans[abs(Trans$`Dif_1.2-10`) >= 0.7,]
diff <- as.numeric(cov_1.2B$X5.cov) - as.numeric(cov_10G$X5.cov)
heatmap_df <- data.frame(diff)
colnames(heatmap_df) <- ("Met_diff")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id
heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]

my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,1),
          na.color = "grey",
          main="Diferència de Coverage a 5'")
@
\clearpage
\subsection{Diferència de Coverage a genebody, filtrat per diferència de transcripció}
<<<heat_cov_diff_body, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
Trans2 <- Trans[abs(Trans$`Dif_1.2-10`) >= 0.7,]
diff <- as.numeric(cov_1.2B$Gene.cov) - as.numeric(cov_10G$Gene.cov)
heatmap_df <- data.frame(diff)
colnames(heatmap_df) <- ("Met_diff")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id
heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]

my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,1),
          na.color = "grey",
          main="Diferència de Coverage a gene-body")
@
\clearpage
\subsection{Diferència de Coverage 5'genebody, filtrat per diferència de transcripció}
<<<heat_cov_diff_body5, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
Trans2 <- Trans[abs(Trans$`Dif_1.2-10`) >= 0.7,]
diff <- (as.numeric(cov_1.2B$Gene.cov)+as.numeric(cov_1.2B$X5.cov)) - (as.numeric(cov_10G$Gene.cov)+as.numeric(cov_10G$X5.cov)) 
heatmap_df <- data.frame(diff)
colnames(heatmap_df) <- ("Met_diff")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id
heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]

my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,1),
          na.color = "grey",
          main="Diferència de Coverage 5'+Gene_body")
@
\clearpage
\subsection{Diferència de Coverage a 3', filtrat per diferència de transcripció}
<<<heat_cov_diff_3, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
Trans2 <- Trans[abs(Trans$`Dif_1.2-10`) >= 0.7,]
diff <- as.numeric(cov_1.2B$X3.cov) - as.numeric(cov_10G$X3.cov)
heatmap_df <- data.frame(diff)
colnames(heatmap_df) <- ("Met_diff")
rownames(heatmap_df) <- cov_10G$Gene
heatmap_df["id"] <- rownames(heatmap_df)
heatmap_df["Trans"] <- apply(heatmap_df, 1, function(x) Trans2[Trans2$ID == x[2],]$`Dif_1.2-10`[1])
heatmap_df <- arrange(heatmap_df, -Trans)
rownames(heatmap_df) <- heatmap_df$id
heatmap_df <- heatmap_df[!is.na(heatmap_df$Trans),]

my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(heatmap_df[,c(3,1)]), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Diferència de Coverage a 3'")
@



\clearpage
\section{Multiple-regression Model}
<<heat_fitted_model, warning=FALSE, fig.width=10, fig.height=10, out.width='.9\\linewidth', echo = FALSE>>=
g10_g <- df_10G_colapsed$X3.cov + df_10G_colapsed$Gene.cov + df_10G_colapsed$X5.cov
b12_g <- df_1.2B_colapsed$X3.cov[df_1.2B_colapsed$Gene != "PF3D7_1301600"] + df_1.2B_colapsed$Gene.cov[df_1.2B_colapsed$Gene != "PF3D7_1301600"] + df_1.2B_colapsed$X5.cov[df_1.2B_colapsed$Gene != "PF3D7_1301600"]

met_df <- data.frame(c(g10_g, (b12_g*(0))), c((g10_g*(0)), b12_g))
colnames(met_df) <- c("10G", "1.2B")
rownames(met_df) <- c(as.character(df_10G_colapsed$Gene), as.character(df_1.2B_colapsed$Gene[df_1.2B_colapsed$Gene != "PF3D7_1301600"]))
met_df["PF3D7_1301600","1.2B"] <- df_1.2B_colapsed$X3.cov[df_1.2B_colapsed$Gene == "PF3D7_1301600"]
met_df["id"] <- rownames(met_df)
met_df["Trans"] <- apply(met_df, 1, function(x) Trans[Trans$ID == x[3],]$`Dif_1.2-10`[1])
met_df <- arrange(met_df, -Trans)

met_cov_df <- met_df
met_cov_df["10G_cov"] <- dif_10G_cov_colapsed[dif_10G_cov_colapsed$Gene %in% met_cov_df$id,]$Total.cov
met_cov_df["1.2B_cov"] <- dif_1.2B_cov_colapsed[dif_1.2B_cov_colapsed$Gene %in% met_cov_df$id,]$Total.cov
met_cov_df <- met_cov_df[!is.na(met_cov_df$Trans),]
met_cov_df[met_cov_df == 0] <-1

fit_all <- lm(met_cov_df$Trans ~ met_cov_df$`10G` + met_cov_df$`1.2B` + met_cov_df$`10G_cov` + met_cov_df$`1.2B_cov`, data=met_cov_df)
fit_10G <-  lm(met_cov_df$Trans ~ met_cov_df$`10G` + met_cov_df$`10G_cov`, data=met_cov_df)
fit_12B <- lm(met_cov_df$Trans ~ met_cov_df$`1.2B` + met_cov_df$`1.2B_cov`, data=met_cov_df)

fit_all_df <- data.frame(fitted(fit_all), met_cov_df$Trans)
fit_10G_df <- data.frame(fitted(fit_10G), met_cov_df$Trans)
fit_12B_df <- data.frame(fitted(fit_12B), met_cov_df$Trans)

plot(fit_all_df)
plot(fit_10G_df)
plot(fit_12B_df)

rownames(fit_all_df) <- met_cov_df$id
colnames(fit_all_df) <- c("Predicted", "Trans")
my_palette <- colorRampPalette(c("red", "black", "green"))(n = 500)
heatmap.2(as.matrix(fit_all_df), 
          scale="column", 
          Rowv = NA, 
          Colv = NA, 
          col = my_palette, 
          dendrogram = "none", 
          trace = "none", 
          srtCol = 0,
          adjCol = c(0.5,1),
          lmat = rbind(c(0,3),c(2,1),c(0,4)),
          lwid = c(1,5),
          lhei = c(1,6,1),
          key = TRUE,
          density.info = "none",
          margins = c(8,8),
          na.color = "grey",
          main="Diferència de Coverage a 3'")
@


<<create_names_table, echo = FALSE, warning=FALSE>>=
x <- strsplit(as.character(cov_10G[,6]), ";")
gnames <- lapply(x, function(x) gsub("description=", "", x[2], fixed = TRUE))
cov_10G["Gene_Names"] <- unlist(gnames)
write.table(cov_10G[,c(1,7)], file = "/home/lucas/ISGlobal/Gen_Referencies/Taula_IDs_Noms.csv", sep=",", row.names = FALSE)
@

\end{document}