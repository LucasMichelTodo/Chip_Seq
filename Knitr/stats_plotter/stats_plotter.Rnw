\documentclass[12pt, a4paper]{article}
\usepackage[utf8]{inputenc}
\usepackage{longtable}
\usepackage{multirow} 
\usepackage{hyperref}
\usepackage[titles]{tocloft}
\usepackage[affil-it]{authblk}
\usepackage{geometry}
\geometry{verbose,tmargin=3cm,bmargin=3cm,lmargin=3cm,rmargin=3cm}

\setlength\parindent{0pt}

\title{\textbf{\Large Alignment Stats}}

\author {Lucas Michel Tod√≥, Cristina Bancells\\
Alfred Cortes and Juan R. Gonzalez}

\affil{Barcelona Global Health Institute (ISGlobal), Campus PRBB}

\begin{document}

\maketitle
\tableofcontents
\newpage

<<include=FALSE, eval=TRUE>>=
library(ggplot2)
library(plyr)
library(dplyr)
library(highlight)
options(width = 220)
@

\section{Params}
Params 1: -p 1 --very-sensitive --local -5 4 -3 4 -I 50 -X 250 \\
Params 2: -p 1 --very-sensitive --local -5 4 -3 4 -I 50 -X 10000 \\
Params 3: -p 1 --very-sensitive --local -5 12 -3 4 -I 50 -X 10000 \\
Params 4: -p 1 --very-sensitive --local -N 1 -5 12 -3 4 -I 50 -X 10000 \\


<<include=FALSE, eval=TRUE>>=
####  Fetch files and create iterables ####
file_names <- list.files("/home/lucas/ISGlobal/TestSet/align_tests2/inputs/")
file_names <- unique(lapply(file_names, function(x) substr(x,1,17)))

dirs <- list.files("/home/lucas/ISGlobal/TestSet/align_tests2/")[substr(list.files("/home/lucas/ISGlobal/TestSet/align_tests2/"),1,6) == "params"]
@

\section{Tables}

<<include=FALSE, eval=TRUE>>=
iter <- "First"
for (dir in dirs){
  for (x in file_names){
    df <- read.csv(file = paste0("/home/lucas/ISGlobal/TestSet/align_tests2/", dir, "/",x, "_stats_summary.csv"), header = FALSE, sep = "\t")
    if (iter == "First"){
      params <- df[complete.cases(df),]
      colnames(params) <- c("Stats", paste0(substr(x,1,4), "_", substr(dir,7,8)))
      iter <- "other"
    } else {
      params[,paste0(substr(x,1,4), "_", substr(dir,7,8))] <- df[complete.cases(df),2]
    }
  }
}

is.num <- sapply(params, is.numeric)
params[is.num] <- lapply(params[is.num], round, 0)
@

\subsection{Stats}
<<size="tiny">>=
print(params)
@

\subsection{Average Coverage}

\begin{tabular}{l|c|c|c|c|c|c|c|c|c}
\cline{2-9}
&\multicolumn{2}{|c|}{Par 1}&\multicolumn{2}{|c|}{Par 2}&\multicolumn{2}{|c|}{Par 3}&\multicolumn{2}{|c|}{Par 4}\\
\hline
\multicolumn{1}{|l|}{Coding:}&0.593&0.549 &0.595&0.551 &0.550&0.512 &0.550&0.512\\
\hline
\multicolumn{1}{|l|}{Non-Coding:}&0.398&0.373 &0.403&0.378 &0.3670&0.347 &0.3670&0.347\\
\hline
\end{tabular}


\section{Plots}
\subsection{MAPQ}
\noindent

<<fig.pos="H", out.width='.5\\linewidth', out.height="0.5\\textheight", fig.show="hold", results="asis", echo=FALSE>>=
par(mfrow = c(1, 2))
for (dir in dirs){
  for (x in file_names){
    mapq <- read.csv2(file = paste0("/home/lucas/ISGlobal/TestSet/align_tests2/",dir,"/",x,"_MAPQ.csv"), sep = "\t", header = FALSE)
    df <- as.data.frame(as.numeric(mapq))
    colnames(df) <- "MAPQ"
    title <- paste0(x,"_",dir)
    print(ggplot(df, aes(x = MAPQ)) +
        geom_histogram(binwidth = 1) +
        labs(x = "MAPQ", y = "Count") +
        ggtitle(title) +
        theme(plot.title = element_text(hjust = 0.5)) +
        scale_x_continuous(breaks = seq(0, 45, by = 2), limits = c(0,48)) +
        scale_y_continuous(breaks = seq(0,80000, by = 5000)))
    plot.new()
  }
}
@

\clearpage
\subsection{Fragment Length}
\noindent

<<fig.pos="H", out.width='.5\\linewidth', fig.show="hold", results="asis", echo=FALSE, warning=FALSE>>=
par(mfrow = c(1, 2))
for (dir in dirs){
  for (x in file_names){
    lens <- read.csv2(file = paste0("/home/lucas/ISGlobal/TestSet/align_tests2/",dir,"/",x,"_lengths.csv"), sep = "\t", header = FALSE)
    abs_lens <- abs(as.numeric(lens))
    for (element in abs_lens){
      if (element > 3000){abs_lens[element] <- 0}
    }
    df <- as.data.frame(abs_lens[abs_lens != 0])
    colnames(df) <- "len"
    title <- paste0(x,"_",dir)
    print(ggplot(df, aes(x = len)) +
        geom_histogram(bins = 100) +
        labs(x = "Lengths", y = "Count") +
        ggtitle(title) +
        theme(plot.title = element_text(hjust = 0.5)) +
        scale_x_continuous(breaks = seq(75, 500, by = 25), limits = c(75,500)))
    plot.new()
  }
}

@

\end{document}