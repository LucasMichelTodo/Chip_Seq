\documentclass[12pt, a4paper]{article}

\author {Carles Hernandez-Ferrer, Cristina Bancells\\
Alfred Cortes and Juan R. Gonzalez}

\affil{Barcelona Global Health Institute (ISGlobal), Campus PRBB}

\begin{document}

<<>>=
library(ggplot2)
library(ggfortify)
library(XLConnect)
library(dplyr)
library(Hmisc)
@
Primer importem el diccionari de noms antics i nous:
<<>>=
rosetta <- read.table("/home/lucas/ISGlobal/Gen_Referencies/Gene_references_rosetta.txt", fill = TRUE, fileEncoding = "UTF-8")
@
Després la llista de gens amb màxima differència segons transcripció:
<<>>=
diff_trans <- read.table("/home/lucas/ISGlobal/Llista_diff_10G_12B.txt", fill = TRUE, fileEncoding = "UTF-8")
@
Alguna diferència segons transcripció:
<<>>=
diff_trans_all <- read.table("/home/lucas/ISGlobal/Llista_diff_10G_12B_all.txt", fill = TRUE, fileEncoding = "UTF-8")
@
Differetial peak calling 10G
<<>>=
diff_10G_met <- read.table("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/Narrow_fe30/Annotation_hits/Lists/10G_1.2B_annotation_list.txt") 
@
# Differential peak calling 1.2B
<<>>=
diff_12B_met <- read.table("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/Narrow_fe30/Annotation_hits/Lists/1.2B_10G_annotation_list.txt") 
@
Comprovant que tots surten al diccionari
<<>>=
table(diff_10G_met[,1] %in% rosetta[,1])
diff_10G_met[!diff_10G_met[,1] %in% rosetta[,1],1]

table(diff_trans[,1] %in% rosetta[,3] | diff_trans[,1] %in% rosetta[,4] | diff_trans[,1] %in% rosetta[,5])
@
Traduïr tots els gens de "diff_trans"
<<>>=
for (i in 1:length(diff_trans[,1])){
  if (diff_trans[i,1] %in% rosetta[,3]){
    diff_trans[i,2] <- rosetta[rosetta[,3] %in% diff_trans[i,1],1]
  } else if (diff_trans[i,1] %in% rosetta[,4]){
    diff_trans[i,2] <- rosetta[rosetta[,4] %in% diff_trans[i,1],1]
  } else if (diff_trans[i,1] %in% rosetta[,5]){
    diff_trans[i,2] <- rosetta[rosetta[,5] %in% diff_trans[i,1],1]
  }
}
@
Traduïr diff_trans_all ALERTA!!! alguns tenen multiples traduccions!
<<>>=
for (i in 1:length(diff_trans_all[,1])){
  if (diff_trans_all[i,1] %in% rosetta[,3]){
    diff_trans_all[i,2] <- rosetta[rosetta[,3] %in% diff_trans_all[i,1],1][1]
  } else if (diff_trans_all[i,1] %in% rosetta[,4]){
    diff_trans_all[i,2] <- rosetta[rosetta[,4] %in% diff_trans_all[i,1],1][1]
  } else if (diff_trans_all[i,1] %in% rosetta[,5]){
    diff_trans_all[i,2] <- rosetta[rosetta[,5] %in% diff_trans_all[i,1],1][1]
  }
}
@
Gens de diff_trans que estan en un o altra llista dels diffential peak callings
<<>>=
# Taula
table(diff_trans[,2] %in% diff_10G_met[,1] | diff_trans[,2] %in% diff_12B_met[,1])

# Gens que són a la llista de diff_peaks
diff_trans[diff_trans[,2] %in% diff_10G_met[,1] | diff_trans[,2] %in% diff_12B_met[,1],]

# Gens que no són a la llista de diff_peaks
diff_trans[!(diff_trans[,2] %in% diff_10G_met[,1] | diff_trans[,2] %in% diff_12B_met[,1]),]

#### Gens que surten differencialment metilats que són a la llista de trans ####

table(diff_10G_met[,1] %in% diff_trans[,2])
for (i in diff_10G_met[!diff_10G_met[,1] %in% diff_trans[,2],1]){
  print(i)
}


table(diff_12B_met[,1] %in% diff_trans[,2])
for (i in diff_12B_met[diff_12B_met[,1] %in% diff_trans[,2],1]){
  print(i)
}

#### Gens de diff_trans_all que estan en un o altra llista dels diffential peak callings ####

# Taula
table(diff_trans_all[,2] %in% diff_10G_met[,1] | diff_trans_all[,2] %in% diff_12B_met[,1])

# Gens que són a la llista de diff_peaks
diff_trans_all[diff_trans_all[,2] %in% diff_10G_met | diff_trans_all[,2] %in% diff_12B_met,]

# Gens que no són a la llista de diff_peaks
diff_trans_all[!(diff_trans_all[,2] %in% diff_10G_met | diff_trans_all[,2] %in% diff_12B_met),]

#### Gens que surten differencialment metilats que són a la llista de trans ####

table(diff_10G_met[,1] %in% diff_trans_all[,2])
table(diff_12B_met[,1] %in% diff_trans_all[,2])

#### Importar "taules" de gens metilats ####
df_10G <- read.table("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/Narrow_fe15/XLS_contrasts/Overlapped_and_filetred/calcFE/bed/annotated/10G_1.2B_peaks_overlappandfilter_calcFE_annotated.csv", header = TRUE, sep ="\t") 
df_1.2B <- read.table("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/Narrow_fe15/XLS_contrasts/Overlapped_and_filetred/calcFE/bed/annotated/1.2B_10G_peaks_overlappandfilter_calcFE_annotated.csv", header = TRUE, sep ="\t") 

df_10G <- df_10G[df_10G$Gene %in% diff_trans_all[,2],]
df_1.2B <- df_1.2B[df_1.2B$Gene %in% diff_trans_all[,2],]
head(df_10G)

#Tota la taula
table(df_10G$Gene %in% diff_trans[,2])
df_10G$Gene[!df_10G$Gene %in% diff_trans[,2]] 

table(df_1.2B$Gene %in% diff_trans[,2])
df_1.2B$Gene[!df_1.2B$Gene %in% diff_trans[,2]]

#Només gens metilats a 5' o a ORF
df_10G_tss <- df_10G[df_10G$X5.cov > 30,]
df_10G_ORF <- df_10G[df_10G$Gene.cov > 30,]
df_10G_filtered <- df_10G[df_10G$X5.cov > 30 | df_10G$Gene.cov > 10,]

table(df_10G_tss$Gene %in% diff_trans[,2])
df_10G_tss[df_10G_tss$Gene %in% diff_trans[,2],]
df_10G_tss[!df_10G_tss$Gene %in% diff_trans[,2],]

table(df_10G_ORF$Gene %in% diff_trans[,2])
df_10G_ORF[df_10G_ORF$Gene %in% diff_trans[,2],]
df_10G_ORF[!df_10G_ORF$Gene %in% diff_trans[,2],]


table(df_10G_filtered$Gene %in% diff_trans[,2])
table(df_10G_filtered$Gene[!df_10G_filtered$Gene %in% diff_trans[,2]] %in% diff_trans_all[,2])


df_1.2B_tss <- df_1.2B[df_1.2B$X5.cov > 10,]
df_1.2B_ORF <- df_1.2B[df_1.2B$Gene.cov > 10,]
df_1.2B_filtered <- df_1.2B[df_1.2B$X5.cov > 10 | df_1.2B$Gene.cov > 10,]

table(df_1.2B_tss$Gene %in% diff_trans[,2])
table(df_1.2B_ORF$Gene %in% diff_trans[,2])
table(df_1.2B_filtered$Gene %in% diff_trans[,2])

#### PCAS ####
df_10G["Trans"] <- df_10G$Gene %in% diff_trans[,2]
autoplot(prcomp(df_10G[,2:4]), data = df_10G, colour = "Trans")

df_1.2B["Trans"] <- df_1.2B$Gene %in% diff_trans[,2]
autoplot(prcomp(df_1.2B[,2:4]), data = df_1.2B, colour = "Trans")


colnames(df_10G)

ggplot(data = df_10G, aes( x = Gene.cov, y = X5.cov)) + geom_point(aes(color = Trans))
ggplot(data = df_1.2B, aes( x = Gene.cov, y = X5.cov)) + geom_point(aes(color = Trans))

#### Recalcular diferències transcripció ####

xls <- readWorksheetFromFile("/home/lucas/ISGlobal/Chip_Seq/Transcripció_CSV/3D7_Variantome_AllData_withGam.xls", sheet = 2)
colnames(xls)
trans_df <- xls[,c(3,5,6,10,11,15,16,20,21)]
colnames(trans_df)[1] <- "Gene"
#Convert NAs to 0
trans_df[trans_df == "NA"] <- NA
#Calculate max diference and add column
trans_df["Max_diff"] <- apply(trans_df[,-1], 1, function(x) max(c(abs(as.numeric(x[1]) - as.numeric(x[2])), 
                                                                  (abs(as.numeric(x[3])) - as.numeric(x[4])), 
                                                                  abs(as.numeric(x[5]) - as.numeric(x[6])), 
                                                                  abs(as.numeric(x[7]) - as.numeric(x[8])))))

#Calculate FC corresponding to max diference and adding column
get_max_fc <- function(x){
  l <- abs(as.numeric(x[1]) - as.numeric(x[2]))
  m <- abs(as.numeric(x[3]) - as.numeric(x[4]))
  r <- abs(as.numeric(x[5]) - as.numeric(x[6]))
  s <- abs(as.numeric(x[7]) - as.numeric(x[8]))
  top <- which.max(c(l,m,r,s))
  if (length(top) > 0){
    if (top == 1) {
      fc = as.numeric(x[1])/as.numeric(x[2])
    } else if (top == 2) {
      fc = as.numeric(x[3])/as.numeric(x[4])
    } else if (top == 3) {
      fc = as.numeric(x[5])/as.numeric(x[6])
    } else if (top == 4) {
      fc = as.numeric(x[7])/as.numeric(x[8])
    }
  } else {
    fc = NA
  }
  return(fc)
}

trans_df["FC"] <- apply(trans_df[,-1], 1, get_max_fc)

#Arrange df according to FC
trans_df <- arrange(trans_df, desc(FC))
trans_df[5100:5267,]

#Traduir
for (i in 1:length(trans_df[,1])){
  if (trans_df[i,1] %in% rosetta[,3]){
    trans_df[i,"ID"] <- rosetta[rosetta[,3] %in% trans_df[i,1],1][1]
  } else if (trans_df[i,1] %in% rosetta[,4]){
    trans_df[i,"ID"] <- rosetta[rosetta[,4] %in% trans_df[i,1],1][1]
  } else if (trans_df[i,1] %in% rosetta[,5]){
    trans_df[i,"ID"] <- rosetta[rosetta[,5] %in% trans_df[i,1],1][1]
  }
}


# Plots de diferències i FC
h <- ggplot(trans_df, aes(x = trans_df$Max_dif))
h + geom_histogram(binwidth = 1) + 
  scale_x_continuous(breaks = seq(0, max(trans_df$Max_dif, na.rm = TRUE), 2)) +
  coord_cartesian(ylim = c(0,100))

fc <- ggplot(trans_df, aes(x = trans_df$FC))
fc + geom_histogram(binwidth = 0.01) +
  scale_x_continuous(breaks = seq(0, 3, by = 0.1)) +
  coord_cartesian(xlim = c(0,3))

#### I repetim comparatives ####


get_FC <- function(x){
  return(trans_df[which(trans_df[,"ID"] == x[1]),"FC"])
}

df_10G["FC"] <- apply(df_10G, 1, get_FC)
df_1.2B["FC"] <- apply(df_1.2B, 1, get_FC)

table(df_10G$FC > 1)
table(df_1.2B$FC < 1)

#Tota la taula
table(df_10G$Gene %in% trans_df$ID[trans_df$FC > 1])
df_10G$Gene[!df_10G$Gene %in% trans_df$ID] 

table(df_1.2B$Gene %in% trans_df$ID[trans_df$FC > 1])
df_1.2B$Gene[!df_1.2B$Gene %in% trans_df$ID[trans_df$Max_diff > 5]]

#Només gens metilats a 5' o a ORF
df_10G_tss <- df_10G[df_10G$X5.cov > 10,]
df_10G_ORF <- df_10G[df_10G$Gene.cov > 10,]
df_10G_tts <- df_10G[df_10G$X3.cov > 10,]
df_10G_filtered <- df_10G[df_10G$X5.cov > 10 | df_10G$Gene.cov > 10,]



table(df_10G_tts$Gene %in% trans_df$ID[trans_df$FC > 1])
df_10G_tts[df_10G_tts$Gene %in% trans_df$ID[trans_df$FC > 1],]
df_10G_tts[!df_10G_tts$Gene %in% trans_df$ID[trans_df$FC > 1],]

table(df_10G_tss$Gene %in% trans_df$ID[trans_df$FC > 1])
df_10G_tss[df_10G_tss$Gene %in% trans_df$ID[trans_df$FC > 1],]
df_10G_tss[!df_10G_tss$Gene %in% trans_df$ID[trans_df$FC > 1],]

table(df_10G_ORF$Gene %in% trans_df$ID[trans_df$FC > 1])
df_10G_ORF[df_10G_ORF$Gene %in% trans_df$ID[trans_df$FC > 1],]
df_10G_ORF[!df_10G_ORF$Gene %in% trans_df$ID[trans_df$FC > 1],]

table(df_10G_filtered$Gene %in% trans_df$ID[trans_df$FC > 1])
df_10G_filtered[df_10G_filtered$Gene %in% trans_df$ID[trans_df$FC > 1],]
df_10G_filtered[!df_10G_filtered$Gene %in% trans_df$ID[trans_df$FC > 1],]



df_1.2B_tss <- df_1.2B[df_1.2B$X5.cov > 10,]
df_1.2B_ORF <- df_1.2B[df_1.2B$Gene.cov > 10,]
df_1.2B_tts <- df_1.2B[df_1.2B$X3.cov> 10,]
df_1.2B_filtered <- df_1.2B[df_1.2B$X5.cov > 10 | df_1.2B$Gene.cov > 10,]

table(df_1.2B_tss$Gene %in% trans_df$ID[trans_df$FC > 1])
df_1.2B_tss[df_1.2B_tss$Gene %in% trans_df$ID[trans_df$FC > 1],]
df_1.2B_tss[!df_1.2B_tss$Gene %in% trans_df$ID[trans_df$FC > 1],]

table(df_1.2B_tts$Gene %in% trans_df$ID[trans_df$FC > 1])
df_1.2B_tts[df_1.2B_tts$Gene %in% trans_df$ID[trans_df$FC > 1],]
df_1.2B_tts[!df_1.2B_tts$Gene %in% trans_df$ID[trans_df$FC > 1],]

table(df_1.2B_ORF$Gene %in% trans_df$ID[trans_df$FC > 1])
df_1.2B_ORF[df_1.2B_ORF$Gene %in% trans_df$ID[trans_df$FC > 1],]
df_1.2B_ORF[!df_1.2B_ORF$Gene %in% trans_df$ID[trans_df$FC > 1],]

table(df_1.2B_filtered$Gene %in% trans_df$ID[trans_df$FC > 1])

#### PCAS ####
trans_df["Met"] <- trans_df$ID %in% df_10G$Gene
trans_df_noNA <- trans_df[complete.cases(trans_df),]
trans_df_noNA[,2:9] <- apply(trans_df_noNA[,2:9], c(1,2), function(x) x <- as.numeric(x))

autoplot(prcomp(trans_df_noNA[,2:9]), data = trans_df_noNA, colour = "Met") + scale_color_manual(values=c(rgb(1,0,0, alpha = 0.05), rgb(0,1,0, alpha = 1)))

#### Load Taulas de coverage 10G####
gene_metilation_10G <- read.table("/home/lucas/ISGlobal/Chip_Seq/DATA/Aligns/q5/10G_me_sort_q5_CovMtx_5ext.csv", header = FALSE, sep ="\t") 
gene_metilation_10G$V9 <- lapply(gene_metilation_10G$V9, function(x) gsub("ID=", "", strsplit(as.character(x), split = ";", fixed = TRUE)[[1]][[1]], fixed = TRUE))
gene_metilation_10G <- gene_metilation_10G[,c(9,1:8,10)]

get_FC2 <- function(x){
  fc <- trans_df[which(trans_df[,"ID"] == x),"FC"]
  if (length(fc) > 1){
    if (any(!is.na(fc))){
      fc <- max(fc, na.rm = FALSE)
    } else {
      fc <- NA
    }
    } else if ((length(fc) == 0)){
      fc <- NA
    }
  return(fc)
  }

gene_metilation_10G["FC"] <- sapply(gene_metilation_10G$V9, function(x) get_FC2(x))
gene_metilation_10G["V10"] <- sapply(gene_metilation_10G["V10"], function(x) x <- as.numeric(as.character(x)))

#Get mean 10G expression value
trans_df["mean_10G"] <- apply(trans_df, 1, function(x) mean(c(as.numeric(x["left.10g"]), as.numeric((x["mid.10g"]), as.numeric(x["right.10g"]), as.numeric(x["sides.10g"]), na.rm = TRUE))))

get_mean10g <- function(x){
  m <- trans_df[which(trans_df[,"ID"] == x),"mean_10G"]
  if (length(m) == 0){
    m <- NA
  }
  return(m)
}
gene_metilation_10G["mean_10G"] <- sapply(gene_metilation_10G$V9, function(x) get_mean10g(x)[1])

# Posar colnames
colnames(gene_metilation_10G) <- c("ID", "Chrom", "DB", "Type", "Start", "Stop", "Score", "Strand", "Frame", "Met", "FC", "mean_10G")

#### Some Plots ####
#for_PCA <- gene_metilation_10G[-3716,]

p <- ggplot(gene_metilation_10G, aes(x = Met))
p + geom_dotplot(aes(fill = mean_10G))

p <- ggplot(gene_metilation_10G, aes(x = Met, y = mean_10G))
p + geom_point() + scale_x_log10()

#### Calcular correlacions ####
cor <- rcorr(as.matrix(gene_metilation_10G[,c("Met", "mean_10G", "FC")]))
signif(cor$r, 2)
@

\section{Session Info}%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
  
<<session_info, cache=FALSE>>=
sessionInfo()
@
\end{document}